<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--再次加载mybatis的配置-->
    <import resource="classpath:/spring/spring-mybatis.xml"/>

    <!--再次加载redis的配置-->
    <import resource="classpath:/spring/spring-redis.xml"/>

    <!-- 解析@RequestMapping -->
    <mvc:annotation-driven />

    <!-- 要求springmvc可以处理静态资源-->
    <!--<mvc:resources mapping="/static/**" location="/static/"/>-->

    <!-- 扫描controller包下所有使用注解的类型 -->
    <context:component-scan base-package="com.cloneZjrt.controller"/>

    <!--扫描service包下所有使用注解的类型-->
    <context:component-scan base-package="com.cloneZjrt.service"/>

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter"/> <!-- JSON转换器 -->
            </list>
        </property>
    </bean>

    <!-- 静态资源默认servlet配置 -->
    <mvc:default-servlet-handler/>

    <!-- 配置jsp 显示ViewResolver -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置拦截器 -->
    <!--<mvc:interceptors>-->
        <!--<mvc:interceptor>-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.cloneZjrt.util.MyInterceptor"/>-->
        <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->


    <!--自定义消息转换器的编码,解决后台传输json回前台时，中文乱码问题-->
    <mvc:annotation-driven >
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" >
                <property name = "supportedMediaTypes">
                    <list>
                        <value>application/json;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                        <!-- application 可以在任意 form 表单里面 enctype 属性默认找到 -->
                        <value>application/x-www-form-urlencoded</value>
                    </list>
                </property>
            </bean>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--上传文件 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- 最大文件大小，-1为不限制大小 ，这里是100000000-->
        <property name="maxUploadSize" value="10000000"/>
        <!-- 最大内存大小 -->
        <property name="maxInMemorySize" value="10240"/>
    </bean>

    <!--<bean id="sysconfigproperties"  class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="localOverride" value="true" />-->
        <!--<property name="ignoreResourceNotFound" value="true" />-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath*:/sys.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="instantiationTracingBeanPostProcessor" class="com.cloneZjrt.config.InstantiationTracingBeanPostProcessor"/>-->
</beans>