<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd">

<context:property-placeholder order="1" location="classpath:redis.properties" ignore-unresolvable="true"/>
    <!-- Redis -->
    <!-- 连接池参数 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="minIdle" value="${redis.pool.minIdle}" />
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}"></property>
        <property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}"></property>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"></property>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
        <property name="testOnReturn" value="${redis.pool.testOnReturn}" />
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"></property>
    </bean>
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="hostName" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="password" value="${redis.pwd}" />
        <property name="usePool" value="${redis.userPool}" />
        <property name="database" value="${redis.database}" />
        <property name="timeout" value="${redis.timeout}" />
    </bean>

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />

        <!-- 序列化方式 建议key/hashKey采用StringRedisSerializer -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
        <!-- 开启REIDS事务支持 -->
        <property name="enableTransactionSupport" value="false" />
    </bean>

    <!-- 对string操作的封装 -->
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <constructor-arg ref="jedisConnectionFactory" />
        <!-- 开启REIDS事务支持 -->
        <property name="enableTransactionSupport" value="false" />
    </bean>

</beans>
        <!--<?xml version="1.0" encoding="UTF-8"?>-->
<!--<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"-->
       <!--xmlns="http://www.springframework.org/schema/beans"-->
       <!--xmlns:context="http://www.springframework.org/schema/context"-->
       <!--xmlns:aop="http://www.springframework.org/schema/aop"-->
       <!--xmlns:tx="http://www.springframework.org/schema/tx"-->
       <!--xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">-->

<!--&lt;!&ndash; 连接池基本参数配置，类似数据库连接池 &ndash;&gt;-->
<!--<context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>-->

<!--<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="${redis.pool.maxTotal}"/>-->
    <!--<property name="maxIdle" value="${redis.pool.maxIdle}" />-->
    <!--<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>-->
<!--</bean>-->

<!--&lt;!&ndash; 连接池配置，类似数据库连接池 &ndash;&gt;-->
<!--<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" >-->
    <!--<property name="hostName" value="${redis.host}"></property>-->
    <!--<property name="port" value="${redis.port}"></property>-->
    <!--<property name="password" value="${redis.pwd}"></property>-->
    <!--<property name="poolConfig"  ref="poolConfig"></property>-->
<!--</bean>-->

<!--<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
    <!--<property name="connectionFactory" ref="jedisConnectionFactory" />-->

    <!--&lt;!&ndash; 序列化方式 建议key/hashKey采用StringRedisSerializer &ndash;&gt;-->
    <!--<property name="keySerializer">-->
        <!--<bean-->
                <!--class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="valueSerializer">-->
        <!--<bean-->
                <!--class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="hashKeySerializer">-->
        <!--<bean-->
                <!--class="org.springframework.data.redis.serializer.StringRedisSerializer" />-->
    <!--</property>-->
    <!--<property name="hashValueSerializer">-->
        <!--<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />-->
    <!--</property>-->
    <!--&lt;!&ndash; 开启REIDS事务支持 &ndash;&gt;-->
    <!--<property name="enableTransactionSupport" value="false" />-->
<!--</bean>-->

<!--&lt;!&ndash; 对string操作的封装 &ndash;&gt;-->
<!--<bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">-->
    <!--<constructor-arg ref="jedisConnectionFactory" />-->
    <!--&lt;!&ndash; 开启REIDS事务支持 &ndash;&gt;-->
    <!--<property name="enableTransactionSupport" value="false" />-->
<!--</bean>-->

<!--</beans>-->