#   1. DEBUG (the least serious) 调试
#   2. INFO  hibernaer.sql
#   3. WARN  警告
#   4. ERROR 异常
#   5. FATAL (the most serious) 内存溢出
#定义LOG输出级别
log4j.rootLogger=INFO,Console,File,error,DEBUG
#定义日志输出目的地为控制台
log4j.appender.Console=org.apache.log4j.ConsoleAppender
log4j.appender.Console.Target=System.out
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
log4j.appender.Console.layout.ConversionPattern=[%c] - %m%n
log4j.appender.Console.Threshold = debug

#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File = org.apache.log4j.RollingFileAppender
#指定输出目录
log4j.appender.File.File = logs/cloneZjrt.log
#定义文件最大大小
log4j.appender.File.MaxFileSize = 100MB
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold = ALL
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n


log4j.appender.error=org.apache.log4j.DailyRollingFileAppender
#指定输出目录
log4j.appender.error.file = logs/error.log
#后缀可为.txt  /  .log  /  .html等等，此处设置为时间格式滚动生成日志
log4j.appender.error.DatePattern=yyyy-MM-dd'.log'
# 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
log4j.appender.error.append=true

#输出DEBUG信息到指定文件
log4j.appender.DEBUG=org.apache.log4j.DailyRollingFileAppender
log4j.appender.DEBUG.layout=org.apache.log4j.PatternLayout
log4j.appender.DEBUG.layout.ConversionPattern=[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
log4j.appender.DEBUG.datePattern=yyyy-MM-dd'.log'
log4j.appender.DEBUG.Threshold = DEBUG
log4j.appender.DEBUG.append=true
log4j.appender.DEBUG.File=logs/debug.log

#打印sql语句
log4j.logger.com.cloneZjrt.dao=DEBUG
log4j.logger.java.sql.ResultSet=INFO
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG

